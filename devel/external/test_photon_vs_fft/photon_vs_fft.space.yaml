some_variables :
    - &ngals_in_cat 276
        
psf : 
    # space PSF
    type : Airy
    lam_over_diam : {type: Eval, str: '700.e-9 / 1.3 * 180. / math.pi * 3600.'}
    ellip : 
        type : EBeta
        e : { type : Random , min : 0.0 , max : 0.2 }
        beta : { type : Random }
        
gal :
    type : Sersic
    half_light_radius : { type : InputCatalog , col : 2,  index : { type: Sequence, repeat: 2} }
    n : { type : InputCatalog , col : 1,  index : { type: Sequence, repeat: 2} }
    ellip : 
        type : GBeta 
        g : { type : InputCatalog , col : 3,  index : { type: Sequence, repeat: 2} }  
        beta : { type : Random }
    shift : 
        type : RandomCircle
        radius : 0.1
    flux : 2e7
    
image :
    random_seed : 1929391
    nproc : 5
    # pixel scale for space observations
    pixel_scale : 0.03  # arcsec / pixel
    type : Tiled
    # we are generating galaxies in one long tiled stripe
    nx_tiles : 1
    ny_tiles : *ngals_in_cat    
    # this has to be big in order for the space images to contain the galaxies fully
    stamp_size : 256
    # this field is required for the photon image, 
    # but we don't want to add any noise, so we set the variance to 0
    noise :
        type : Gaussian
        sigma : 0.         
    # at this point specify the defaults, but if has to be specified here if will be changed later
    # using vary_params
    gsparams :
         minimum_fft_size : 128      
         maximum_fft_size : 50000     
         alias_threshold : 5.e-3     
         maxk_threshold : 1.e-3      
         kvalue_accuracy : 1.e-5     
         xvalue_accuracy : 1.e-5     
         shoot_accuracy : 1.e-5      
         realspace_relerr : 1.e-3    
         realspace_abserr : 1.e-6    
         integration_relerr : 1.e-5  
         integration_abserr : 1.e-7  


input :
    catalog :
        dir : .
        file_name : cosmos_sersics_sample_N300_cleaned.asc

# added for the purpose of the photon_vs_fft
# photon_vs_fft will run once for each value of each listed parameter
# the results for the input galaxies will be saved to a file with a name
# 'results.yaml_filename.param_name.param_index.cat'
# later other scripts can be used to produce plots
vary_params:
    alias_threshold : 
        path : ['image','gsparams','alias_threshold']
        values : [ 1.0e-1 , 5.0e-2 , 1.0e-2 , 5.0e-3 , 1.0e-3 , 5.0e-4 ]
        rebuild_pht : False 
        rebuild_fft : True  
    maxk_threshold :   
        path : ['image','gsparams','maxk_threshold' ] 
        values : [ 1.0e-1 , 5.0e-2 , 1.0e-2 , 5.0e-3 , 1.0e-3 , 5.0e-4 , 1.0e-4 , 5.0e-5 , 1.0e-5  ]  
        rebuild_pht : False
        rebuild_fft : True 
    kvalue_accuracy : 
        path : ['image','gsparams','kvalue_accuracy']
        values : [ 1.0e-3 , 1.0e-4 , 1.0e-5 , 1.0e-6 , 1.0e-7 , 1.0e-8 ] 
        rebuild_pht : False 
        rebuild_fft : True 
    # test if there is no failures
    # alias_threshold : { path : ['image','gsparams','alias_threshold'], values : [ 1e-2 , 7e-4 ] , rebuild_pht : False , rebuild_fft : True } 
    # kvalue_accuracy : { path : ['image','gsparams','kvalue_accuracy'], values : [ 1e-3 , 1e-8 ] , rebuild_pht : False , rebuild_fft : True }
    # maxk_threshold :  { path : ['image','gsparams','maxk_threshold'],  values : [ 1e-1 , 1e-8 ] , rebuild_pht : False , rebuild_fft : True }