# vim: set filetype=python :

import os
import glob

Import('env')

libs=['galsim']

env1 = env.Clone(CPPDEFINES=[],LIBS=libs+env['LIBS'])

env1['OBJPREFIX'] = '.obj/'

bin_dir = 'bin'
bin_install_dir = os.path.join(env['INSTALL_PREFIX'], bin_dir)

sbdraw = env1.Program('#'+bin_dir+'/sbdraw', 'SBDraw.cpp')

shera = env1.Program('#'+bin_dir+'/shera', 'Shera.cpp')

int_example = env1.Program('#'+bin_dir+'/int_example', 'IntExample.cpp')

bin_targets = [ sbdraw, shera, int_example ]

if 'install' in COMMAND_LINE_TARGETS:

    # I think we don't actually want to install the example programs.
    # But here is how we would do it for real programs that the user will want
    # to have installed:
    installed_bin = env1.Install(dir=bin_install_dir, source=bin_targets)
    env1.Alias(target='install', source=installed_bin)


if 'uninstall' in COMMAND_LINE_TARGETS:
    # There is no env.Uninstall method, we must build our own
    deltarget = Delete("$TARGET")

    binfiles = [os.path.join(bin_install_dir, os.path.basename(str(f[0]))) for f in bin_targets]

    for f in binfiles:
        env1.Alias('uninstall', env1.Command(f, None, deltarget))


